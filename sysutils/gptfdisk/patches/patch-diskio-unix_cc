$OpenBSD$
Index: diskio-unix.cc
--- diskio-unix.cc.orig
+++ diskio-unix.cc
@@ -28,6 +28,10 @@
 #ifdef __linux__
 #include "linux/hdreg.h"
 #endif
+#ifdef __OpenBSD__
+#include <sys/dkio.h>
+#include <sys/disklabel.h>
+#endif
 
 #include <iostream>
 #include <fstream>
@@ -151,6 +155,9 @@ int DiskIO::GetBlockSize(void) {
 #ifdef __sun__
    struct dk_minfo minfo;
 #endif
+#ifdef __OpenBSD__
+   struct disklabel dl;
+#endif
 
    // If disk isn't open, try to open it....
    if (!isOpen) {
@@ -169,6 +176,11 @@ int DiskIO::GetBlockSize(void) {
 #if defined (__FreeBSD__) || defined (__FreeBSD_kernel__)
       err = ioctl(fd, DIOCGSECTORSIZE, &blockSize);
 #endif
+#if defined (__OpenBSD__)
+      err = ioctl(fd, DIOCGPDINFO, &dl);
+      if (err != -1)
+          blockSize = dl.d_secsize;
+#endif
 #ifdef __linux__
       err = ioctl(fd, BLKSSZGET, &blockSize);
 #endif
@@ -282,6 +294,13 @@ int DiskIO::DiskSync(void) {
            << "You should reboot or remove the drive.\n";
       platformFound++;
 #endif
+#if defined (__OpenBSD__)
+      sleep(2);
+      i = ioctl(fd, DIOCRLDINFO);
+      cout << "Warning: The kernel may continue to use old or deleted partitions.\n"
+           << "You should reboot or remove the drive.\n";
+      platformFound++;
+#endif
 #ifdef __linux__
       sleep(1); // Theoretically unnecessary, but ioctl() fails sometimes if omitted....
       fsync(fd);
@@ -430,6 +449,9 @@ uint64_t DiskIO::DiskSize(int *err) {
 #ifdef __sun__
    struct dk_minfo minfo;
 #endif
+#ifdef __OpenBSD__
+   struct disklabel dl;
+#endif
 
    // If disk isn't open, try to open it....
    if (!isOpen) {
@@ -457,6 +479,12 @@ uint64_t DiskIO::DiskSize(int *err) {
       long long b = GetBlockSize();
       sectors = bytes / b;
       platformFound++;
+#endif
+#if defined (__OpenBSD__)
+      if (ioctl(fd, DIOCGPDINFO, &dl) != -1) {
+          sectors = DL_GETDSIZE(&dl);
+          platformFound++;
+      }
 #endif
 #ifdef __linux__
       long sz;
